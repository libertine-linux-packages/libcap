# This file is part of libertine linux's package libcap. It is subject to the license terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/libertine-linux-packages/libcap/master/COPYRIGHT. No part of libertine linux's package libcap, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2016 The developers of libertine linux's package libcap. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/libertine-linux-packages/libcap/master/COPYRIGHT.


variant=upstream

depends build_ccache
build_needs ccache

depends build_gnumake
build_needs make

depends build_musl_cross_make_build
build_needs "$libertine_build"-cc

depends build_musl_cross_make_host
build_needs "$libertine_host"-cc "$libertine_host"-ar "$libertine_host"-ranlib "$libertine_host"-strip

depends build_perl
build_needs perl

depends build_busybox
build_needs echo fgrep install pwd true

# During executions
build_needs awk grep

libertine_compile_libcap()
{
	pushd "$(libertine_public_sourcePath)"
		
		local systemHeaders="$(libertine_public_outputHostSysrootPath musl_cross_make)"/usr/include
		
		# Setting LD=true here is an enormous hack to prevent the compilation of shared version of libcap (libcap.so)
		# This is because libcap is compiled -fPIC but is linked to libc.a; musl_cross_make's libc.a isn't compiled -fPIC
		libertine_public_make \
			DESTDIR="$(libertine_public_outputHostSysrootPath)" prefix='/usr' lib='lib' \
			CC="ccache ${libertine_host}-cc $(libertine_public_hostCCompilerFlags)" \
			CFLAGS="-D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64" \
			BUILD_CC="ccache ${libertine_build}-cc $(libertine_public_buildCCompilerFlags)" \
			SYSTEM_HEADERS="$systemHeaders" \
			DEBUG='' \
			AR="${libertine_host}-ar" \
			RANLIB="${libertine_host}-ranlib" \
			BUILD_GPERF='' \
			INDENT='' \
			PAM_CAP='no' \
			LD=true
		
		# Hack to allow install target to work when not compiling libcap.so
		local soName="$(grep '^LIBTITLE=' Make.Rules | awk -F '=' '{print $2}')"
		local soMajorVersion="$(grep '^VERSION=' Make.Rules | awk -F '=' '{print $2}')"
		local soMinorVersion="$(grep '^MINOR=' Make.Rules | awk -F '=' '{print $2}')"
		
		printf 'Hack - we do not compile the .so file. See libcap.functions in Libertine Linux var/lib/libcap' >libcap/"$soName".so."$soMajorVersion"."$soMinorVersion"
		
		libertine_public_make \
			DESTDIR="$(libertine_public_outputHostSysrootPath)" prefix='/usr' lib='lib' \
			CC="ccache ${libertine_host}-cc $(libertine_public_hostCCompilerFlags)" \
			CFLAGS="-D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64" \
			BUILD_CC="ccache ${libertine_build}-cc $(libertine_public_buildCCompilerFlags)" \
			SYSTEM_HEADERS="$systemHeaders" \
			DEBUG='' \
			AR="${libertine_host}-ar" \
			RANLIB="${libertine_host}-ranlib" \
			BUILD_GPERF='' \
			INDENT='' \
			PAM_CAP='no' \
			RAISE_SETFCAP=no \
			install \
			LD=true
		
	popd
	
	libertine_public_installAndStripBinariesIn sbin capsh getcap getpcaps setcap
}
